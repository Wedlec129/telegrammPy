#телеграмм
import telebot
from telebot import types
 

#для звука
import pyttsx3
import speech_recognition as sr

#для парчинга
import requests 
from bs4 import BeautifulSoup as BS

import time
import sys
import os

import smtplib
from configparser import ConfigParser
# Добавляем необходимые подклассы - MIME-типы
from email.mime.multipart import MIMEMultipart      # Многокомпонентный объект
from email.mime.text import MIMEText                # Текст/HTML
from email.mime.image import MIMEImage              # Изображения


from time import sleep

#ключ для бота
TOKEN='########'

#получить число из сайта
def getChesloForhtml(teg,clas,htmlForChislo):
      # Ссылка на нужную страницу
      html = htmlForChislo
    	# Заголовки для передачи вместе с URL
      headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.##.149 Safari/537.36'}

      full_page = requests.get(html, headers=headers)

      soup = BS(full_page.content, 'html.parser')

      convert = soup.findAll(teg, {"id": clas}) #тег классы и какие то значения 

      return( convert[0].text)

#произнисти голосом компа
def PcSay(watSay):
    #можно говорить
    PC= pyttsx3.init()

    print(watSay)

    PC.say(watSay)


    PC.runAndWait() #начать говорить

#записать число в файл
def writeToFile(watWrite):
    putyToFail="C:/Users/Борис/Desktop/qw1.txt"
    with open(putyToFail,"w") as file:
       file.write(watWrite)

       print("текст в файле изменён")

#написать сообщение на почту
def WriteToEMAIL(text,komu):
     
  # addr_from = "####"                 # Адресат
  # addr_to   = "#####"                   # Получатель
  # password  = "####"                                  # Пароль

   addr_from = "####"                 # Адресат
   addr_to   = ####                   # Получатель
   password  = "####"                                  # Пароль

   msg = MIMEMultipart()                               # Создаем сообщение
   msg['From']    = addr_from                          # Адресат
   msg['To']      = addr_to                            # Получатель
   msg['Subject'] = ''                   # Тема сообщения

   body = text
   msg.attach(MIMEText(body, 'plain'))                 # Добавляем в сообщение текст

   
   server = smtplib.SMTP_SSL('smtp.mail.ru', 465)           # Создаем объект SMTP
  
   try:
    server.login(addr_from, password)                   # Получаем доступ

    server.send_message(msg)                            # Отправляем сообщение
    server.quit()                                       # Выходим

    print("письмо отправленно")
   except:
       print("Ошибка ПОЧТЫ : неверный логин или пароль")




#kurs=getChesloForhtml("div","currency-table__large-text","https://www.banki.ru/products/currency/eur/");  
#writeToFile(kurs)
#say("курс евро :"+kurs)



bot=telebot.TeleBot(TOKEN) # создаём бота и привязываем ключ

class WeShisloForTelegramm:
    a=[0]
    history=["0"]

    def addInHistoty(self,tipHistory):
        #запоминаем в историю
      
      self.history.append(tipHistory)

    def input(self,sms,tipHistory):

      return self.history[len(self.history)-1]==tipHistory and sms != tipHistory
      
        

    def set(self,sms):
        self.a.append(sms)
       

        #очищаем history
        self.history.clear()
        self.history.append("0")

    def get(self):
        #print(sys.getsizeof(self.history))
        return self.a[len(self.a)-1]

    


@bot.message_handler(commands=['start'])  # если написали команду старт
def messengToStart(message):

   


  #создаём большие кнопки 
  markupBig = types.ReplyKeyboardMarkup(row_width=2)

  
  item2Big=types.InlineKeyboardButton("set POROG")
  item3Big=types.InlineKeyboardButton("get POROG")
 

  markupBig.add(item2Big,item3Big)

  #


  
  bot.send_message(message.chat.id,"привет <b>  "+message.from_user.first_name +" "+ message.from_user.last_name+"</b>  это Спам Бот"  ,parse_mode='html',reply_markup=markupBig)

  # создаём число для ввода
POROG=WeShisloForTelegramm()
 

  #тут проверям все сообщения(текст ) от пользователя
@bot.message_handler(content_types=['text'])
def otvet(message):

    #если сбрасываем a
   if message.text == 'set POROG':
      bot.send_message(message.chat.id,"set POROG ")

      # добавляем в историю с конкретным именим
      POROG.addInHistoty('set POROG')
     
      #вводим а через сообщение  если история ==set a
   if POROG.input(message.text,'set POROG'):

       POROG.set(message.text)

       bot.send_message(message.chat.id,"POROG >= "+POROG.get())

   if message.text == 'get POROG':
             bot.send_message(message.chat.id,"get POROG >= "+str(POROG.get()))
             



kursXRP=getChesloForhtml("span","last_last","https://ru.investing.com/crypto/xrp/xrp-rub")


print(kursXRP)

  # if(int(POROG.get())>=40):

  #     for j in range(1, 100):
   #     bot.send_message(message.chat.id,str(j)+") POROG >= "+str(POROG.get()))
   #     sleep(1)
         



 



bot.polling(none_stop=True) #бот активен 