#—Ç–µ–ª–µ–≥—Ä–∞–º–º
import telebot
from telebot import types

#–¥–ª—è –∑–≤—É–∫–∞
import pyttsx3
import speech_recognition as sr

#–¥–ª—è –ø–∞—Ä—á–∏–Ω–≥–∞
import requests 
from bs4 import BeautifulSoup as BS

import time
import sys
import os

import smtplib
from configparser import ConfigParser
# –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–¥–∫–ª–∞—Å—Å—ã - MIME-—Ç–∏–ø—ã
from email.mime.multipart import MIMEMultipart      # –ú–Ω–æ–≥–æ–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç
from email.mime.text import MIMEText                # –¢–µ–∫—Å—Ç/HTML
from email.mime.image import MIMEImage              # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è


#–∫–ª—é—á –¥–ª—è –±–æ—Ç–∞
TOKEN='###'

#–ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ –∏–∑ —Å–∞–π—Ç–∞
def getChesloForhtml(teg,clas,htmlForChislo):
      # –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      html = htmlForChislo
    	# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å URL
      headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.####.149 Safari/537.36'}

      full_page = requests.get(html, headers=headers)

      soup = BS(full_page.content, 'html.parser')

      convert = soup.findAll(teg, {"class": clas}) #—Ç–µ–≥ –∫–ª–∞—Å—Å—ã –∏ –∫–∞–∫–∏–µ —Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è 

      return( convert[0].text)

#–ø—Ä–æ–∏–∑–Ω–∏—Å—Ç–∏ –≥–æ–ª–æ—Å–æ–º –∫–æ–º–ø–∞
def say(watSay):
    #–º–æ–∂–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å
    PC= pyttsx3.init()

    print(watSay)

    PC.say(watSay)


    PC.runAndWait() #–Ω–∞—á–∞—Ç—å –≥–æ–≤–æ—Ä–∏—Ç—å

#–∑–∞–ø–∏—Å–∞—Ç—å —á–∏—Å–ª–æ –≤ —Ñ–∞–π–ª
def writeToFile(watWrite):
    putyToFail="C:/Users/–ë–æ—Ä–∏—Å/Desktop/qw1.txt"
    with open(putyToFail,"w") as file:
       file.write(watWrite)

       print("—Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª–µ –∏–∑–º–µ–Ω—ë–Ω")

#–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É
def WriteToEMAIL(text):
     
   addr_from = "###u"                 # –ê–¥—Ä–µ—Å–∞—Ç
   addr_to   = "###om"                   # –ü–æ–ª—É—á–∞—Ç–µ–ª—å
   password  = "p####word"                                  # –ü–∞—Ä–æ–ª—å

   msg = MIMEMultipart()                               # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
   msg['From']    = addr_from                          # –ê–¥—Ä–µ—Å–∞—Ç
   msg['To']      = addr_to                            # –ü–æ–ª—É—á–∞—Ç–µ–ª—å
   msg['Subject'] = ''                   # –¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

   body = text
   msg.attach(MIMEText(body, 'plain'))                 # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç

   
   server = smtplib.SMTP_SSL('smtp.mail.ru', 465)           # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç SMTP
  
   try:
    server.login(addr_from, password)                   # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø

    server.send_message(msg)                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    server.quit()                                       # –í—ã—Ö–æ–¥–∏–º

    print("–ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ")
   except:
       print("–û—à–∏–±–∫–∞ –ü–û–ß–¢–´ : –Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")





kurs=getChesloForhtml("div","currency-table__large-text","https://www.banki.ru/products/currency/eur/");  
#writeToFile(kurs)
#say("–∫—É—Ä—Å –µ–≤—Ä–æ :"+kurs)
#WriteToEMAIL("–ø—Ä–∏–≤–µ—Ç "+kurs)



bot=telebot.TeleBot(TOKEN) # —Å–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–ª—é—á

@bot.message_handler(commands=['start'])  # –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
def messengToStart(message):

    #—Å–æ–∑–¥–∞—ë–º –º–∞–ª–µ–Ω—å–∫–∏–µ –∫–Ω–æ–ø–æ—á–∫–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
  markup = types.InlineKeyboardMarkup(row_width=2)

  item1=types.InlineKeyboardButton("—é—Ç—É–±", url="https://www.youtube.com/?gl=RU&hl=ru")
  item2=types.InlineKeyboardButton("—á—Ç–æ —Ç–æ", url="https://metanit.com/cpp/tutorial/5.14.php")
  item3=types.InlineKeyboardButton("–∫–Ω–æ–ø–∫–∞ good", callback_data='good')
  item4=types.InlineKeyboardButton("—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data='sms')

  markup.add(item1,item2,item3,item4)
  #


  #—Å–æ–∑–¥–∞—ë–º –±–æ–ª—å—à–∏–µ –∫–Ω–æ–ø–∫–∏ 
  markupBig = types.ReplyKeyboardMarkup(row_width=2)

  item1Big=types.InlineKeyboardButton("–µ–≤—Ä–æ")
  
  markupBig.add(item1Big)

  #


  #—Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç + –º–∞–ª–µ–Ω—å–∫–∏–µ –∫–Ω–æ–ø–∫–º(–∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º)
  bot.send_message(message.chat.id,"–ø—Ä–∏–≤–µ—Ç <b>  "+message.from_user.first_name +" "+ message.from_user.last_name+"</b>  —ç—Ç–æ WedlecBot. –µ–≥–æ <a href='https://vk.com/wedlec129'> –∞–≤—Ç–æ—Ä </a>"  ,parse_mode='html',reply_markup=markup)
  
  #—Å–æ–æ–±—â–µ–Ω–∏–µ + –∫–ª–∞–≤–∏–∞—É—Ç—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏

  photo='https://sun1-87.userapi.com/zB8ter8zhVnPiBeRykJOEeijF1S-KmylvpQHMw/561VegVaA8Q.jpg'
  bot.send_photo(message.chat.id, photo)

  bot.send_message(message.chat.id,"igel",reply_markup=markupBig)
  

       
  
  #—Ç—É—Ç –ø—Ä–æ–≤–µ—Ä—è–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è(—Ç–µ–∫—Å—Ç ) –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
def otvet(message):
   if message.text == '–µ–≤—Ä–æ':
            bot.send_message(message.chat.id,"–µ–≤—Ä–æ : "+kurs )
   
    


#—Ç—É—Ç –ø—Ä–æ–≤–µ—Ä—è–º –Ω–∞–∂–∞—Ç–∏—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
                

            if call.data == 'sms':
                bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")
               



#run
bot.polling(none_stop=True) #–±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω 


